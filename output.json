{
  "type": "api",
  "id": "logout-user",
  "infoId": "swagger-petstore-yaml",
  "unversionedId": "logout-user",
  "title": "Logs out current logged in user session",
  "description": "",
  "frontMatter": {
    "description": ""
  },
  "api": {
    "tags": [
      "user"
    ],
    "description": "",
    "operationId": "logoutUser",
    "responses": {
      "default": {
        "description": "successful operation"
      }
    },
    "method": "get",
    "path": "/user/logout",
    "servers": [
      {
        "url": "https://petstore.swagger.io/v2",
        "description": "Default server"
      },
      {
        "url": "https://petstore.swagger.io/sandbox",
        "description": "Sandbox server"
      },
      {
        "url": "http://127.0.0.1:4010",
        "description": "Prism Mock API (local)"
      }
    ],
    "securitySchemes": {
      "petstore_auth": {
        "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "OpenID": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://example.com/.well-known/openid-configuration"
      },
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
              "read": "Grants read access",
              "write": "Grants write access",
              "admin": "Grants access to admin operations"
            }
          }
        }
      }
    },
    "info": {
      "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\n  \nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
      "version": "2.0.0",
      "title": "Swagger Petstore YAML",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "name": "API Support",
        "email": "apiteam@swagger.io",
        "url": "https://github.com/Redocly/redoc"
      },
      "x-logo": {
        "url": "https://redocly.github.io/redoc/petstore-logo.png",
        "altText": "Petstore logo"
      },
      "x-dark-logo": {
        "url": "/img/petstore-logo-dark.png",
        "altText": "Petstore dark logo"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "postman": {
      "name": "Logs out current logged in user session",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "url": {
        "path": [
          "user",
          "logout"
        ],
        "host": [
          "{{baseUrl}}"
        ],
        "query": [],
        "variable": []
      },
      "method": "GET"
    }
  },
  "postmanItem": {
    "id": "c3a57ba4-c6fc-414f-a6a8-6f20dca2033c",
    "name": "Logs out current logged in user session",
    "request": {
      "name": "Logs out current logged in user session",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "url": {
        "path": [
          "user",
          "logout"
        ],
        "host": [
          "{{baseUrl}}"
        ],
        "query": [],
        "variable": []
      },
      "method": "GET",
      "auth": null
    },
    "response": [
      {
        "id": "382899f3-15e7-4424-b6dd-94624070ecfe",
        "name": "successful operation",
        "originalRequest": {
          "url": {
            "path": [
              "user",
              "logout"
            ],
            "host": [
              "{{baseUrl}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {}
        },
        "status": "Internal Server Error",
        "code": 500,
        "header": [
          {
            "key": "Content-Type",
            "value": "text/plain"
          }
        ],
        "body": "",
        "cookie": [],
        "_postman_previewlanguage": "text"
      }
    ],
    "event": [],
    "protocolProfileBehavior": {
      "disableBodyPruning": true
    }
  }
}